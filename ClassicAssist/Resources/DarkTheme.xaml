<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:ClassicAssist.Controls;assembly=ClassicAssist.Controls"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:draggableTreeView="clr-namespace:ClassicAssist.Controls.DraggableTreeView;assembly=ClassicAssist.Controls"
                    xmlns:draggableListBox="clr-namespace:ClassicAssist.Controls.DraggableListBox;assembly=ClassicAssist.Controls"
                    xmlns:headered="clr-namespace:ClassicAssist.Controls.Headered;assembly=ClassicAssist.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ClassicAssist.Shared;component/Resources/Icons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/ClassicAssist.Shared;component/Resources/Colours.xaml" />
        <ResourceDictionary Source="pack://application:,,,/ClassicAssist.Shared;component/Resources/DarkTheme.xaml" />
        <ResourceDictionary Source="pack://application:,,,/ClassicAssist.Controls;component/ClearableComboBox.xaml" />
        <ResourceDictionary>
            <Style x:Key="{x:Type controls:EditTextBlock}" TargetType="{x:Type controls:EditTextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
                <Setter Property="MinWidth" Value="50" />
            </Style>
            <Style x:Key="{x:Type xctk:IntegerUpDown}" TargetType="{x:Type xctk:IntegerUpDown}">
                <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderBrush}" />
            </Style>
            <Style TargetType="{x:Type draggableTreeView:DraggableTreeView}" BasedOn="{StaticResource TreeViewStyle}">
                <Setter Property="Background" Value="{DynamicResource ThemeInnerControlBackgroundBrush}" />
            </Style>
            <Style TargetType="{x:Type draggableListBox:DraggableListBox}"
                   BasedOn="{StaticResource {x:Type ListBox}}" />
            <Style TargetType="{x:Type headered:HorizontalHeaderedContentControl}">
                <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
            </Style>
            <Style TargetType="{x:Type controls:OptionedCheckBoxControl}" BasedOn="{StaticResource {x:Type CheckBox}}" />
            <Style x:Key="WrapTextStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type controls:ImageButton}" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Margin="{TemplateBinding Padding}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>