<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:resources="clr-namespace:ClassicAssist.Shared.Resources;assembly=ClassicAssist.Shared"
    xmlns:agents="clr-namespace:ClassicAssist.UI.ViewModels.Agents"
    xmlns:misc="clr-namespace:ClassicAssist.UI.Misc"
    xmlns:controls="clr-namespace:ClassicAssist.Controls;assembly=ClassicAssist.Controls"
    xmlns:autoloot="clr-namespace:ClassicAssist.Data.Autoloot"
    xmlns:ValueConverters="clr-namespace:ClassicAssist.UI.Misc.ValueConverters"
    xmlns:misc1="clr-namespace:ClassicAssist.Misc"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:draggableTreeView="clr-namespace:ClassicAssist.Controls.DraggableTreeView;assembly=ClassicAssist.Controls"
    xmlns:valueConverters="clr-namespace:ClassicAssist.Shared.UI.ValueConverters;assembly=ClassicAssist.Shared"
    xmlns:behaviours="clr-namespace:ClassicAssist.Shared.UI.Behaviours;assembly=ClassicAssist.Shared"
    xmlns:data="clr-namespace:ClassicAssist.UO.Data"
    x:Class="ClassicAssist.UI.Views.Agents.AutolootTabControl"
    mc:Ignorable="d"
    d:DesignHeight="250" d:DesignWidth="600" x:Name="userControl">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Resources/DarkTheme.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ClassicAssist.Shared;component/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <misc1:BindingProxy x:Key="Proxy" Data="{Binding}" />
            <ValueConverters:CellWidthValueConverter x:Key="CellWidthValueConverter" />
            <valueConverters:EnumToIntegerValueConverter x:Key="EnumToIntegerValueConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.DataContext>
        <agents:AutolootViewModel />
    </UserControl.DataContext>
    <Grid>
        <Grid.Resources>
            <valueConverters:NullToBooleanConverter x:Key="NullToBooleanValueConverter" />
        </Grid.Resources>
        <i:Interaction.Behaviors>
            <misc:ClipboardBehaviour CopyCommand="{Binding ClipboardCopyCommand}"
                                     PasteCommand="{Binding ClipboardPasteCommand}"
                                     CommandParameter="{Binding SelectedProperties}" />
        </i:Interaction.Behaviors>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding LeftColumnWidth}" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Margin="10" Grid.Column="0">
            <i:Interaction.Behaviors>
                <behaviours:GridSizeChangedBehaviour Width="{Binding LeftColumnWidth}" />
            </i:Interaction.Behaviors>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0">
                <CheckBox Content="{x:Static resources:Strings.Enabled}" IsChecked="{Binding Enabled}" />
                <CheckBox Content="{x:Static resources:Strings.Disable_inside_guardzone}"
                          IsChecked="{Binding DisableInGuardzone}" />
                <CheckBox Content="{x:Static resources:Strings.Loot_humanoids}" IsChecked="{Binding LootHumanoids}" />
            </StackPanel>
            <Border BorderBrush="{DynamicResource ThemeBorderBrush}"
                    BorderThickness="1" Grid.Row="1" Margin="0,10,0,10">
                <ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Auto">
                    <i:Interaction.Behaviors>
                        <misc:ScrollOnDragDrop />
                    </i:Interaction.Behaviors>
                    <draggableTreeView:DraggableTreeView x:Name="listView"
                                                         ItemsSource="{Binding Draggables}"
                                                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                         BorderThickness="0"
                                                         AllowDragGroups="False"
                                                         PreviewMouseWheel="DraggableTreeView_OnPreviewMouseWheel"
                                                         BindableSelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         BindableSelectedGroup="{Binding SelectedGroup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         HorizontalContentAlignment="Stretch"
                                                         Style="{StaticResource CompressedTreeViewStyle}">
                        <draggableTreeView:DraggableTreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type autoloot:AutolootEntry}">
                                <controls:EditTextBlock
                                    Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                    ShowIcon="True"
                                    Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Converter={StaticResource CellWidthValueConverter}, ConverterParameter=10}">
                                    <controls:EditTextBlock.Label>
                                        <MultiBinding StringFormat="{}{0} - 0x{1:x}">
                                            <Binding Path="Name" />
                                            <Binding Path="ID" />
                                        </MultiBinding>
                                    </controls:EditTextBlock.Label>
                                    <controls:EditTextBlock.Resources>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Enabled}" Value="False">
                                                    <Setter Property="TextDecorations" Value="Strikethrough" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=Group.Enabled}"
                                                             Value="False">
                                                    <Setter Property="TextDecorations" Value="Strikethrough" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </controls:EditTextBlock.Resources>
                                </controls:EditTextBlock>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type autoloot:AutolootGroup}"
                                                      ItemsSource="{Binding Children}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <CheckBox IsChecked="{Binding Enabled}" Grid.Column="0" Margin="0,0,5,0" />
                                    <controls:EditTextBlock
                                        Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                        Grid.Column="1"
                                        Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Converter={StaticResource CellWidthValueConverter}, ConverterParameter=10}">
                                        <controls:EditTextBlock.Resources>
                                            <Style TargetType="{x:Type TextBlock}"
                                                   BasedOn="{StaticResource {x:Type TextBlock}}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Enabled}" Value="False">
                                                        <Setter Property="TextDecorations" Value="Strikethrough" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls:EditTextBlock.Resources>
                                    </controls:EditTextBlock>
                                </Grid>
                            </HierarchicalDataTemplate>
                        </draggableTreeView:DraggableTreeView.Resources>
                        <draggableTreeView:DraggableTreeView.InputBindings>
                            <KeyBinding Key="Delete"
                                        Command="{Binding RemoveCommand}" CommandParameter="{Binding SelectedItem}" />
                        </draggableTreeView:DraggableTreeView.InputBindings>
                        <i:Interaction.Behaviors>
                            <misc:ItemsControlSelectNewEntryBehaviour SelectedItem="{Binding SelectedItem}"
                                                                      Type="{x:Type autoloot:AutolootEntry}" />
                        </i:Interaction.Behaviors>
                        <draggableTreeView:DraggableTreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{x:Static resources:Strings.New_Group}"
                                          Command="{Binding Source={StaticResource Proxy}, Path=Data.(agents:AutolootViewModel.NewGroupCommand)}" />
                                <MenuItem Header="{x:Static resources:Strings.Remove_Group}"
                                          Command="{Binding Source={StaticResource Proxy}, Path=Data.(agents:AutolootViewModel.RemoveGroupCommand)}"
                                          CommandParameter="{Binding SelectedGroup}" />
                            </ContextMenu>
                        </draggableTreeView:DraggableTreeView.ContextMenu>
                    </draggableTreeView:DraggableTreeView>
                </ScrollViewer>
            </Border>
            <StackPanel Grid.Row="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button Content="{x:Static resources:Strings.Remove}" Grid.Column="0" Margin="0,0,5,0"
                            Command="{Binding RemoveCommand}"
                            CommandParameter="{Binding SelectedItem, ElementName=listView}" />
                    <Button Content="{x:Static resources:Strings.Insert}" Grid.Column="1" Margin="5,0,0,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="Click">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <BooleanAnimationUsingKeyFrames
                                                        Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                                    </BooleanAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.ContextMenu>
                            <ContextMenu IsOpen="False">
                                <MenuItem Header="{x:Static resources:Strings.ID_from_target}"
                                          Command="{Binding Source={StaticResource Proxy}, Path=Data.(agents:AutolootViewModel.InsertCommand)}" />
                                <MenuItem Header="{x:Static resources:Strings.Match_Any_ID}"
                                          Command="{Binding Source={StaticResource Proxy}, Path=Data.(agents:AutolootViewModel.InsertMatchAnyCommand)}" />
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button Content="{x:Static resources:Strings.Set_Container}" Margin="0,10,5,0"
                            Command="{Binding SetContainerCommand}" Grid.Column="0" />
                    <Image Source="{StaticResource configureIcon}" Height="16" Margin="5,10,0,0" Grid.Column="1"
                           misc:ClickOpensContextMenuBehaviour.Enabled="True">
                        <Image.ContextMenu>
                            <ContextMenu IsOpen="False">
                                <MenuItem Header="{x:Static resources:Strings.Reset_Container}"
                                          Command="{Binding Source={StaticResource Proxy}, Path=Data.(agents:AutolootViewModel.ResetContainerCommand)}" />
                                <MenuItem Header="{x:Static resources:Strings.Define_Custom_Properties}"
                                          Command="{Binding Source={StaticResource Proxy}, Path=Data.(agents:AutolootViewModel.DefineCustomPropertiesCommand)}" />
                            </ContextMenu>
                        </Image.ContextMenu>
                    </Image>
                </Grid>
            </StackPanel>
        </Grid>
        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Margin="0,10" />
        <Grid Grid.Column="2" Margin="10"
              IsEnabled="{Binding SelectedItem, Converter={StaticResource NullToBooleanValueConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ComboBox x:Name="comboBox" Grid.Row="0" ItemsSource="{Binding Constraints}" DisplayMemberPath="Name"
                      SelectedIndex="0" />
            <Grid Grid.Row="1" Margin="0,10,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox Content="{x:Static resources:Strings.Enabled}" Grid.Column="0"
                          IsChecked="{Binding SelectedItem.Enabled}" />
                <Label Grid.Column="1" Content="{x:Static resources:Strings.Priority_}" HorizontalAlignment="Right"
                       Margin="0,0,5,0" />
                <ComboBox Text="{Binding SelectedItem.Priority, Mode=TwoWay}"
                          ItemsSource="{Binding Source={misc:EnumBindingSource {x:Type autoloot:AutolootPriority}}}"
                          Grid.Column="2" />
            </Grid>
            <ListView x:Name="listView1" Grid.Row="2" Margin="0,10,0,10"
                      ItemsSource="{Binding SelectedItem.Constraints}" SelectedItem="{Binding SelectedProperty}">
                <i:Interaction.Behaviors>
                    <misc:ListViewMultiSelectionBehaviour SelectedItems="{Binding SelectedProperties}" />
                </i:Interaction.Behaviors>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="{x:Static resources:Strings.Property}" Width="150"
                                        DisplayMemberBinding="{Binding Property.Name}" />
                        <GridViewColumn Header="{x:Static resources:Strings.Operator}" Width="75">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox Width="50" SelectedItem="{Binding Operator}"
                                              ItemsSource="{Binding Source={misc:EnumBindingSource {x:Type autoloot:AutolootOperator}}}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{x:Static resources:Strings.Value}" Width="100" x:Name="ValueColumn">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ComboBox Grid.Column="0" Width="90"
                                                  SelectedItem="{Binding Value, Converter={StaticResource EnumToIntegerValueConverter}, ConverterParameter={x:Type data:Layer}}"
                                                  ItemsSource="{Binding Source={misc:EnumBindingSource {x:Type data:Layer}}}">
                                            <ComboBox.Style>
                                                <Style TargetType="{x:Type ComboBox}"
                                                       BasedOn="{StaticResource {x:Type ComboBox}}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Property.AllowedValuesEnum}"
                                                                     Value="{x:Type data:Layer}">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBox.Style>
                                        </ComboBox>
                                        <controls:EditTextBlock Grid.Column="0"
                                                                Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                                MinWidth="40" ShowIcon="True"
                                                                Width="{Binding Converter={StaticResource CellWidthValueConverter}, ConverterParameter=15, Path=Width, ElementName=ValueColumn, Mode=OneWay}">
                                            <controls:EditTextBlock.Style>
                                                <Style TargetType="{x:Type controls:EditTextBlock}"
                                                       BasedOn="{StaticResource {x:Type controls:EditTextBlock}}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Property.AllowedValuesEnum}"
                                                                     Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </controls:EditTextBlock.Style>
                                        </controls:EditTextBlock>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <StackPanel Grid.Row="3">
                <Grid Margin="0,0,0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button Content="{x:Static resources:Strings.Remove}" Grid.Column="0" Margin="0,0,5,0"
                            Command="{Binding RemoveConstraintCommand}"
                            CommandParameter="{Binding SelectedProperties}" />
                    <Button Content="{x:Static resources:Strings.Insert}" Grid.Column="1" Margin="5,0,0,0"
                            Command="{Binding InsertConstraintCommand}"
                            CommandParameter="{Binding SelectedValue, ElementName=comboBox}" />
                </Grid>
                <WrapPanel Orientation="Horizontal">
                    <WrapPanel.Resources>
                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Setter Property="Margin" Value="0,0,10,0" />
                        </Style>
                    </WrapPanel.Resources>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding SelectedItem.Rehue}">
                            <TextBlock Text="{x:Static resources:Strings.Rehue_matching_items}"
                                       VerticalAlignment="Center" />
                        </CheckBox>
                        <Button Margin="0,0,10,0" Command="{Binding SelectHueCommand}"
                                CommandParameter="{Binding SelectedItem, ElementName=listView}">
                            <Image Source="{StaticResource ColorWheelIcon}" Height="12" Width="12" />
                        </Button>
                    </StackPanel>
                    <CheckBox Content="{x:Static resources:Strings.Autoloot_matching_items}"
                              IsChecked="{Binding SelectedItem.Autoloot}" />
                    <CheckBox Content="{x:Static resources:Strings.Requeue_failed_items}"
                              IsChecked="{Binding RequeueFailedItems}" />
                    <CheckBox Content="{x:Static resources:Strings.Match_text_value_of_property__UOAlive_}"
                              IsChecked="{Binding MatchTextValue}" />
                </WrapPanel>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>