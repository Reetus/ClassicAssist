<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:resources="clr-namespace:ClassicAssist.Shared.Resources;assembly=ClassicAssist.Shared"
    xmlns:controls="clr-namespace:ClassicAssist.Controls;assembly=ClassicAssist.Controls"
    xmlns:ValueConverters="clr-namespace:ClassicAssist.UI.Misc.ValueConverters"
    xmlns:agents="clr-namespace:ClassicAssist.UI.ViewModels.Agents"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    x:Class="ClassicAssist.UI.Views.Agents.CountersTabControl"
    mc:Ignorable="d"
    d:DesignHeight="250" d:DesignWidth="500">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}" />
        </Style>
    </d:DesignerProperties.DesignStyle>
    <UserControl.DataContext>
        <agents:CountersTabViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Resources/DarkTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.Resources>
            <ValueConverters:CellWidthValueConverter x:Key="CellWidthValueConverter" />
        </Grid.Resources>
        <ListView Grid.Row="0" Margin="10" ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="{x:Static resources:Strings.Name}" Width="150" x:Name="NameColumn">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <controls:EditTextBlock
                                    Width="{Binding ActualWidth, Converter={StaticResource CellWidthValueConverter}, ConverterParameter=15, ElementName=NameColumn, Mode=OneWay}"
                                    Text="{Binding Name}" ShowIcon="True" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="{x:Static resources:Strings.Graphic}" Width="100"
                                    DisplayMemberBinding="{Binding Graphic, StringFormat={}0x{0:x}}" />
                    <GridViewColumn Header="{x:Static resources:Strings.Color}" Width="75" x:Name="ColorColumn">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <controls:EditTextBlock
                                    Width="{Binding ActualWidth, Converter={StaticResource CellWidthValueConverter}, ConverterParameter=15, ElementName=ColorColumn, Mode=OneWay}"
                                    Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" ShowIcon="True" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="{x:Static resources:Strings.Count}" Width="75"
                                    DisplayMemberBinding="{Binding Count}" />
                </GridView>
            </ListView.View>
        </ListView>
        <DockPanel Grid.Row="1" Margin="10,0,10,10">
            <CheckBox IsChecked="{Binding Warn}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{x:Static resources:Strings.Warn_when_counter_amount_below_}" />
                    <xctk:IntegerUpDown Minimum="0" Value="{Binding WarnAmount}" UpdateValueOnEnterKey="True" />
                </StackPanel>
            </CheckBox>
        </DockPanel>
        <DockPanel Grid.Row="2" Margin="10,0,10,10">
            <DockPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Width" Value="70" />
                    <Setter Property="Height" Value="25" />
                </Style>
            </DockPanel.Resources>
            <Button Content="{x:Static resources:Strings.Remove}" HorizontalAlignment="Left" Margin="0,0,10,0"
                    Command="{Binding RemoveEntryCommand}" CommandParameter="{Binding SelectedItem}" />
            <Button Content="{x:Static resources:Strings.Insert}" HorizontalAlignment="Left"
                    Command="{Binding InsertEntryCommand}" />
            <Button Content="{x:Static resources:Strings.Recount}" HorizontalAlignment="Right"
                    Command="{Binding RecountCommand}" />
        </DockPanel>
    </Grid>
</UserControl>