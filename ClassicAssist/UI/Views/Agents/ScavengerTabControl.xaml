<UserControl x:Class="ClassicAssist.UI.Views.Agents.ScavengerTabControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:resources="clr-namespace:ClassicAssist.Shared.Resources;assembly=ClassicAssist.Shared"
             xmlns:agents="clr-namespace:ClassicAssist.UI.ViewModels.Agents"
             xmlns:valueConverters="clr-namespace:ClassicAssist.UI.Misc.ValueConverters"
             xmlns:controls="clr-namespace:ClassicAssist.Controls;assembly=ClassicAssist.Controls"
             xmlns:scavenger="clr-namespace:ClassicAssist.Data.Scavenger"
             xmlns:misc="clr-namespace:ClassicAssist.UI.Misc"
             mc:Ignorable="d"
             d:DesignWidth="493" d:DesignHeight="400">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}" />
        </Style>
    </d:DesignerProperties.DesignStyle>
    <UserControl.DataContext>
        <agents:ScavengerTabViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Resources/DarkTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
            </Style>
            <Style TargetType="{x:Type controls:EditTextBlock}"
                   BasedOn="{StaticResource {x:Type controls:EditTextBlock}}">
                <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <valueConverters:CellWidthValueConverter x:Key="CellWidthValueConverter" />
        </Grid.Resources>
        <StackPanel Grid.Column="0" Margin="10,10,0,10">
            <StackPanel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Margin" Value="0,5,0,0" />
                    <Setter Property="Padding" Value="20,5" />
                </Style>
            </StackPanel.Resources>
            <CheckBox Content="{x:Static resources:Strings.Enabled}" IsChecked="{Binding Enabled}" />
            <Button Content="{x:Static resources:Strings.Insert}" Command="{Binding InsertCommand}" />
            <Button Content="{x:Static resources:Strings.Remove}" Command="{Binding RemoveCommand}"
                    CommandParameter="{Binding SelectedItem, ElementName=ListView}" />
            <Button Content="{x:Static resources:Strings.Clear_All}" Command="{Binding ClearAllCommand}" />
            <Button Content="{x:Static resources:Strings.Set_Container}" Command="{Binding SetContainerCommand}" />
            <Button Content="{x:Static resources:Strings.Cliloc_Filter}" Command="{Binding OpenClilocFilterCommand}" />
            <CheckBox IsChecked="{Binding CheckWeight}" Content="{x:Static resources:Strings.Check_Weight}"
                      Margin="0,5" />
        </StackPanel>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ListView x:Name="ListView" Grid.Row="0" Margin="10"
                      ItemsSource="{Binding Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Foreground="Black">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="✓">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Enabled}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{x:Static resources:Strings.Name}" Width="150" x:Name="nameColumn">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <controls:EditTextBlock
                                        Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                        Width="{Binding ActualWidth, Converter={StaticResource CellWidthValueConverter}, ElementName=nameColumn, Mode=OneWay}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{x:Static resources:Strings.Graphic}"
                                        DisplayMemberBinding="{Binding Graphic, StringFormat=0x\{0:x\}}" Width="75" />
                        <GridViewColumn Header="{x:Static resources:Strings.Color}" Width="75" x:Name="HueColumn">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <controls:EditTextBlock Text="{Binding Hue}" TabIndex="0"
                                                            Width="{Binding Width, ConverterParameter=15, Converter={StaticResource CellWidthValueConverter}, ElementName=HueColumn}"
                                                            ShowIcon="True" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{x:Static resources:Strings.Priority}" Width="100"
                                        x:Name="PriorityColumn">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox Text="{Binding Priority, Mode=TwoWay}"
                                              ItemsSource="{Binding Source={misc:EnumBindingSource {x:Type scavenger:ScavengerPriority}}}"
                                              Width="{Binding Width, ConverterParameter=15, Converter={StaticResource CellWidthValueConverter}, ElementName=PriorityColumn}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="10,0,0,5">
                <Label Content="{x:Static resources:Strings.Minimum_Weight_Available_}" Margin="0,0,10,0" />
                <TextBox MinWidth="100" Text="{Binding MinWeightAvailable}" IsEnabled="{Binding CheckWeight}" />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>