<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:resources="clr-namespace:ClassicAssist.Shared.Resources;assembly=ClassicAssist.Shared"
    xmlns:agents="clr-namespace:ClassicAssist.UI.ViewModels.Agents"
    xmlns:ValueConverters="clr-namespace:ClassicAssist.UI.Misc.ValueConverters"
    xmlns:controls="clr-namespace:ClassicAssist.Controls;assembly=ClassicAssist.Controls"
    x:Class="ClassicAssist.UI.Views.Agents.VendorBuyTabControl"
    mc:Ignorable="d"
    d:DesignWidth="493" d:DesignHeight="400">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}" />
        </Style>
    </d:DesignerProperties.DesignStyle>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Resources/DarkTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ValueConverters:HexToIntValueConverter x:Key="HexToIntValueConverter" />
            <ValueConverters:CellWidthValueConverter x:Key="CellWidthValueConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.DataContext>
        <agents:VendorBuyTabViewModel />
    </UserControl.DataContext>
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Margin="5" Grid.Column="0" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ListBox x:Name="listView" Grid.Row="0" ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}"
                     HorizontalContentAlignment="Stretch">
                <ListBox.Resources>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Enabled}" Value="False">
                                <Setter Property="TextDecorations" Value="Strikethrough" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Resources>
                <ListBox.InputBindings>
                    <KeyBinding Key="Delete"
                                Command="{Binding RemoveCommand}" CommandParameter="{Binding SelectedItem}" />
                </ListBox.InputBindings>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <controls:EditTextBlock Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                Label="{Binding Name}" ShowIcon="True" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <StackPanel Grid.Row="1" Margin="0,10,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button Content="{x:Static resources:Strings.Remove}" Grid.Column="0" Margin="0,0,5,0"
                            Command="{Binding RemoveCommand}"
                            CommandParameter="{Binding SelectedItem, ElementName=listView}" />
                    <Button Content="{x:Static resources:Strings.New}" Grid.Column="1" Margin="5,0,0,0"
                            Command="{Binding InsertCommand}" />
                </Grid>
            </StackPanel>
        </Grid>
        <Grid Margin="5" Grid.Column="1" Grid.Row="0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="0" Margin="0,0,0,10">
                    <DockPanel.Resources>
                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Setter Property="Margin" Value="0,0,20,0" />
                        </Style>
                    </DockPanel.Resources>
                    <CheckBox Content="{x:Static resources:Strings.Enabled}" IsChecked="{Binding SelectedItem.Enabled}" />
                    <CheckBox IsChecked="{Binding SelectedItem.IncludeBackpackAmount}"
                              Content="{x:Static resources:Strings.Include_Backpack_Amount}" />
                </DockPanel>
                <ListView x:Name="ListView" Grid.Row="1"
                          ItemsSource="{Binding SelectedItem.Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedEntry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Foreground="Black">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="✓">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Enabled}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static resources:Strings.Graphic}" Width="70"
                                            x:Name="ItemIDColumn">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <controls:EditTextBlock
                                            Text="{Binding Graphic, Converter={StaticResource HexToIntValueConverter}, StringFormat=0x\{0:x\}}"
                                            TabIndex="1"
                                            Width="{Binding Width, ConverterParameter=15, Converter={StaticResource CellWidthValueConverter}, ElementName=ItemIDColumn}"
                                            ShowIcon="True" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static resources:Strings.Name}"
                                            DisplayMemberBinding="{Binding Name}"
                                            Width="100" />
                            <GridViewColumn Header="{x:Static resources:Strings.Color}" Width="70" x:Name="HueColumn">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <controls:EditTextBlock Text="{Binding Hue}" TabIndex="0"
                                                                Width="{Binding Width, ConverterParameter=15, Converter={StaticResource CellWidthValueConverter}, ElementName=HueColumn}"
                                                                ShowIcon="True" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static resources:Strings.Amount}" x:Name="AmountColumn"
                                            Width="70">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <controls:EditTextBlock Text="{Binding Amount}" TabIndex="1"
                                                                Width="{Binding Width, ConverterParameter=15, Converter={StaticResource CellWidthValueConverter}, ElementName=AmountColumn}"
                                                                ShowIcon="True" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="{x:Static resources:Strings.Max_Price}" Width="70"
                                            x:Name="MaxPriceColumn">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <controls:EditTextBlock Text="{Binding MaxPrice}" TabIndex="2"
                                                                Width="{Binding Width, ConverterParameter=15, Converter={StaticResource CellWidthValueConverter}, ElementName=MaxPriceColumn}"
                                                                ShowIcon="True" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
                <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0,10,0,0">
                    <Button Content="{x:Static resources:Strings.Insert}" MinWidth="80"
                            Command="{Binding InsertEntryCommand, Mode=OneWay}" Margin="0,0,10,0"
                            CommandParameter="{Binding SelectedItem}" />
                    <Button Content="{x:Static resources:Strings.Remove}" MinWidth="80"
                            Command="{Binding RemoveEntryCommand, Mode=OneWay}"
                            CommandParameter="{Binding SelectedEntry}" />
                </StackPanel>
            </Grid>
        </Grid>
        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="5,0" Grid.ColumnSpan="2">
            <CheckBox IsChecked="{Binding AutoDisableOnLogin}"
                      Content="{x:Static resources:Strings.Auto_disable_when_loading}"
                      ToolTip="{x:Static resources:Strings.Disable_all_vendor_buy_entries_on_loading_profile}" />
        </StackPanel>
    </Grid>
</UserControl>