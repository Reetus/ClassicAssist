<UserControl x:Class="ClassicAssist.UI.Views.Agents.VendorSellTabControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:agents="clr-namespace:ClassicAssist.UI.ViewModels.Agents"
             xmlns:resources="clr-namespace:ClassicAssist.Shared.Resources;assembly=ClassicAssist.Shared"
             xmlns:controls="clr-namespace:ClassicAssist.Controls;assembly=ClassicAssist.Controls"
             xmlns:valueConverters="clr-namespace:ClassicAssist.UI.Misc.ValueConverters"
             xmlns:misc="clr-namespace:ClassicAssist.Misc"
             xmlns:misc1="clr-namespace:ClassicAssist.UI.Misc"
             mc:Ignorable="d"
             d:DesignWidth="493" d:DesignHeight="400">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}" />
        </Style>
    </d:DesignerProperties.DesignStyle>
    <UserControl.DataContext>
        <agents:VendorSellTabViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Resources/DarkTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <valueConverters:CellWidthValueConverter x:Key="CellWidthValueConverter" />
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
            </Style>
            <Style TargetType="{x:Type controls:EditTextBlock}"
                   BasedOn="{StaticResource {x:Type controls:EditTextBlock}}">
                <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
            </Style>
            <misc:BindingProxy x:Key="Proxy" Data="{Binding}" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ListView x:Name="ListView" Margin="10" Grid.Row="0"
                  ItemsSource="{Binding Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Foreground="Black" Grid.IsSharedSizeScope="True">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="✓">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Enabled}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="{x:Static resources:Strings.Graphic}"
                                    DisplayMemberBinding="{Binding Graphic, StringFormat={}0x{0:x}}" Width="50" />
                    <GridViewColumn Header="{x:Static resources:Strings.Name}" DisplayMemberBinding="{Binding Name}"
                                    Width="150" />
                    <GridViewColumn Header="{x:Static resources:Strings.Color}" Width="70" x:Name="HueColumn">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <controls:EditTextBlock Text="{Binding Hue}" TabIndex="0"
                                                        Width="{Binding Path=Width, ElementName=HueColumn, Converter={StaticResource CellWidthValueConverter}, ConverterParameter=15}"
                                                        ShowIcon="True" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="{x:Static resources:Strings.Amount}" Width="70" x:Name="AmountColumn">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <controls:EditTextBlock Text="{Binding Amount}" TabIndex="0"
                                                        Width="{Binding Path=Width, ElementName=AmountColumn, Converter={StaticResource CellWidthValueConverter}, ConverterParameter=15}"
                                                        ShowIcon="True" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="{x:Static resources:Strings.Min_Price}" Width="100" x:Name="MinPriceColumn">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <controls:EditTextBlock Text="{Binding MinPrice}" TabIndex="2"
                                                        Width="{Binding Path=Width, ElementName=MinPriceColumn, Converter={StaticResource CellWidthValueConverter}, ConverterParameter=15}"
                                                        ShowIcon="True" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <Grid Grid.Row="1" Margin="10,0,10,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Content="{x:Static resources:Strings.Set_Container}"
                    Command="{Binding SetContainerCommand}" Grid.Column="0" />
            <Image Source="{StaticResource configureIcon}" Height="16" Grid.Column="1" Margin="10,0,0,0"
                   misc1:ClickOpensContextMenuBehaviour.Enabled="True">
                <Image.ContextMenu>
                    <ContextMenu IsOpen="False">
                        <MenuItem Header="{x:Static resources:Strings.Reset_Container}"
                                  Command="{Binding Source={StaticResource Proxy}, Path=Data.(agents:VendorSellTabViewModel.ResetContainerCommand)}" />
                    </ContextMenu>
                </Image.ContextMenu>
            </Image>
        </Grid>
        <StackPanel Orientation="Horizontal" Grid.Row="2">
            <StackPanel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Margin" Value="5,5,5,5" />
                    <Setter Property="Padding" Value="10,0,10,0" />
                    <Setter Property="MinWidth" Value="80" />
                </Style>
            </StackPanel.Resources>
            <Button Content="{x:Static resources:Strings.Insert}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Click">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.ContextMenu>
                    <ContextMenu IsOpen="False">
                        <MenuItem Header="{x:Static resources:Strings.ID_from_target}"
                                  Command="{Binding Source={StaticResource Proxy}, Path=Data.(agents:VendorSellTabViewModel.InsertCommand)}" />
                        <MenuItem Header="{x:Static resources:Strings.Match_Any_ID}"
                                  Command="{Binding Source={StaticResource Proxy}, Path=Data.(agents:VendorSellTabViewModel.InsertMatchAnyCommand)}" />
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <Button Content="{x:Static resources:Strings.Remove}" Command="{Binding RemoveCommand}"
                    CommandParameter="{Binding SelectedItem, ElementName=ListView}" />
        </StackPanel>
    </Grid>
</UserControl>