<Window x:Class="ClassicAssist.UI.Views.BackupSettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:ClassicAssist.UI.ViewModels"
        xmlns:resources="clr-namespace:ClassicAssist.Shared.Resources;assembly=ClassicAssist.Shared"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:behaviours="clr-namespace:ClassicAssist.Shared.UI.Behaviours;assembly=ClassicAssist.Shared"
        xmlns:validationRules="clr-namespace:ClassicAssist.Shared.UI.ValidationRules;assembly=ClassicAssist.Shared"
        mc:Ignorable="d" Topmost="True" SizeToContent="Height"
        Title="{x:Static resources:Strings.Backup_Settings}" MinHeight="350" Width="400"
        Background="{DynamicResource ThemeWindowBackgroundBrush}">
    <Window.DataContext>
        <viewModels:BackupSettingsWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Resources/DarkTheme.xaml" />
                <ResourceDictionary>
                    <Style x:Key="Login" TargetType="{x:Type ContentControl}">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding BackupOptions.Provider.LoginControl}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Border Grid.Row="0" BorderBrush="{DynamicResource ThemeBorderBrush}" BorderThickness="1" Padding="10"
                Background="{DynamicResource ThemeBackgroundBrush}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                        <Setter Property="Width" Value="100" />
                    </Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Margin" Value="0,0,0,10" />
                    </Style>
                </Grid.Resources>
                <DockPanel Grid.Row="0">
                    <Label Content="{x:Static resources:Strings.Enabled}" DockPanel.Dock="Left" />
                    <CheckBox IsChecked="{Binding BackupOptions.Enabled}" />
                </DockPanel>
                <DockPanel Grid.Row="1">
                    <Label Content="{x:Static resources:Strings.Incremental}" DockPanel.Dock="Left" />
                    <CheckBox IsChecked="{Binding BackupOptions.Provider.Incremental}"
                              ToolTip="{x:Static resources:Strings.Only_write_files_that_have_been_modified}" />
                </DockPanel>
                <DockPanel Grid.Row="2">
                    <Label Content="{x:Static resources:Strings.Type}" DockPanel.Dock="Left" />
                    <ComboBox x:Name="comboBox" ItemsSource="{Binding Providers}" DisplayMemberPath="Name"
                              SelectedItem="{Binding BackupOptions.Provider}" />
                </DockPanel>
                <ContentControl Grid.Row="3" Content="{Binding BackupOptions.Provider.LoginControl}" Margin="0,0,0,10"
                                Style="{StaticResource Login}" />
                <DockPanel Grid.Row="4">
                    <Label Content="{x:Static resources:Strings.Backup_Days}" DockPanel.Dock="Left" />
                    <xctk:IntegerUpDown Value="{Binding BackupOptions.Days}"
                                        ToolTip="{x:Static resources:Strings.Setting_to_zero_will_cause_it_to_backup_on_every_client_close}" />
                </DockPanel>
                <DockPanel Grid.Row="5">
                    <Label Content="{x:Static resources:Strings.Path}" DockPanel.Dock="Left" />
                    <Button Content="..." DockPanel.Dock="Right" Padding="5,0" Margin="10,0,0,0"
                            Command="{Binding BrowsePathCommand}" />
                    <TextBox IsReadOnly="True" x:Name="TextBox">
                        <TextBox.Text>
                            <Binding
                                Path="BackupOptions.Provider.BackupPath"
                                ValidatesOnNotifyDataErrors="True"
                                ValidatesOnDataErrors="True"
                                NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <validationRules:NonEmptyStringValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </DockPanel>
            </Grid>
        </Border>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="1" Margin="0,10,0,0">
            <StackPanel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="IsEnabled" Value="True" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=TextBox}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="False" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>
            <Button Content="{x:Static resources:Strings.Backup_Now}" Margin="0,0,10,0"
                    Command="{Binding BackupNowCommand}" />
            <Button Content="{x:Static resources:Strings.Close}" Padding="25,0">
                <i:Interaction.Behaviors>
                    <behaviours:CloseOnClickBehaviour />
                </i:Interaction.Behaviors>
            </Button>
        </StackPanel>
    </Grid>
</Window>