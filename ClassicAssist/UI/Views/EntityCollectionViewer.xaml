<Window x:Name="window" x:Class="ClassicAssist.UI.Views.EntityCollectionViewer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:viewModels="clr-namespace:ClassicAssist.UI.ViewModels"
        xmlns:resources="clr-namespace:ClassicAssist.Shared.Resources;assembly=ClassicAssist.Shared"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:uimisc="clr-namespace:ClassicAssist.UI.Misc"
        xmlns:views="clr-namespace:ClassicAssist.UI.Views"
        xmlns:models="clr-namespace:ClassicAssist.UI.Models"
        xmlns:valueConverters="clr-namespace:ClassicAssist.Shared.UI.ValueConverters;assembly=ClassicAssist.Shared"
        mc:Ignorable="d" Background="{DynamicResource ThemeBackgroundBrush}"
        Width="600" Height="400" Title="{x:Static resources:Strings.Entity_Collection_Viewer}"
        Topmost="{Binding Options.AlwaysOnTop}">
    <Window.DataContext>
        <viewModels:EntityCollectionViewerViewModel />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Resources/DarkTheme.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/ClassicAssist.Shared;component/Resources/DebugToolBarStyle.xaml" />
                <ResourceDictionary Source="EntityCollectionViewer/Icons.xaml" />
                <ResourceDictionary Source="EntityCollectionViewer/Toolbar.xaml" />
                <ResourceDictionary Source="EntityCollectionViewer/ListStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <valueConverters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ToolBar Style="{DynamicResource ToolBarStyle1}" Grid.Row="0"
                 Background="{DynamicResource ThemeBackgroundBrush}">
            <Button Height="24" Padding="0" Command="{Binding RefreshCommand}"
                    ToolTip="{x:Static resources:Strings.Refresh}"
                    Style="{StaticResource ToolbarButtonStyle}">
                <Image Source="{StaticResource RefreshIcon}" />
            </Button>
            <ToggleButton Height="24" ToolTip="{x:Static resources:Strings.Toggle_item_properties}"
                          Command="{Binding TogglePropertiesCommand}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}">
                <Image Source="{StaticResource ListIcon}" />
            </ToggleButton>
            <ToggleButton x:Name="toggleButton" Height="24">
                <Image Source="{StaticResource FilterIcon}" />
            </ToggleButton>
            <ToggleButton Height="24" ToolTip="{x:Static resources:Strings.Show_Child_Items}"
                          Command="{Binding ToggleChildItemsCommand}" IsChecked="{Binding Options.ShowChildItems}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}">
                <Image Source="{StaticResource BabyIcon}" />
            </ToggleButton>
            <ToggleButton Height="24" ToolTip="{x:Static resources:Strings.Always_On_Top}"
                          Command="{Binding ToggleAlwaysOnTopCommand}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                          IsChecked="{Binding Options.AlwaysOnTop}">
                <Image Source="{StaticResource PinIcon}" />
            </ToggleButton>
            <Button Height="24" Padding="0" Command="{Binding OpenAllContainersCommand}"
                    ToolTip="{x:Static resources:Strings.Open_All_Containers}"
                    Style="{StaticResource ToolbarButtonStyle}">
                <Image Source="{StaticResource ContainerIcon}" Height="19" />
            </Button>
            <Menu Background="Transparent" Height="24">
                <MenuItem Height="24">
                    <MenuItem.Header>
                        <Image Source="{StaticResource SortIcon}" />
                    </MenuItem.Header>
                    <MenuItem Header="{x:Static resources:Strings.Name}" Command="{Binding ChangeSortStyleCommand}"
                              CommandParameter="{x:Static models:EntityCollectionSortStyle.Name}" />
                    <MenuItem Header="{x:Static resources:Strings.Serial}"
                              Command="{Binding ChangeSortStyleCommand}"
                              CommandParameter="{x:Static models:EntityCollectionSortStyle.Serial}" />
                    <MenuItem Header="{x:Static resources:Strings.Color}"
                              Command="{Binding ChangeSortStyleCommand}"
                              CommandParameter="{x:Static models:EntityCollectionSortStyle.Hue}" />
                    <MenuItem Header="{x:Static resources:Strings.Graphic}"
                              Command="{Binding ChangeSortStyleCommand}"
                              CommandParameter="{x:Static models:EntityCollectionSortStyle.ID}" />
                    <MenuItem Header="{x:Static resources:Strings.Amount}"
                              Command="{Binding ChangeSortStyleCommand}"
                              CommandParameter="{x:Static models:EntityCollectionSortStyle.Quantity}" />
                </MenuItem>
            </Menu>
            <Button Height="24" Style="{StaticResource ToolbarButtonStyle}" Command="{Binding CombineStacksCommand}"
                    ToolTip="{x:Static resources:Strings.Combine_stacks}">
                <Image Source="{StaticResource consolidateIcon}" />
            </Button>
            <Button Height="20" Padding="0" Command="{Binding ReplaceNameCommand}"
                    ToolTip="{x:Static resources:Strings.Replace_name_with_single_click_label}"
                    Visibility="{Binding TooltipsEnabled, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                <Image Source="{StaticResource HandPointerIcon}" />
            </Button>
            <Button Height="24" Style="{StaticResource ToolbarButtonStyle}" Command="{Binding TargetContainerCommand}">
                <Image Source="{StaticResource CrosshairIcon}" />
            </Button>
        </ToolBar>
        <ScrollViewer Grid.Row="1" MaxHeight="200"
                      Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=toggleButton}"
                      VerticalScrollBarVisibility="Auto">
            <views:EntityCollectionFilterControl
                Command="{Binding DataContext.ApplyFiltersCommand, ElementName=window}"
                PresentationTraceSources.TraceLevel="High" />
        </ScrollViewer>
        <ListView x:Name="listView" ItemsSource="{Binding Entities}"
                  BorderThickness="0"
                  Background="{DynamicResource ThemeInnerControlBackgroundBrush}"
                  ItemContainerStyle="{StaticResource FileItemStyle}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="2"
                  Style="{StaticResource EntityListViewStyle}">
            <i:Interaction.Behaviors>
                <uimisc:MultiSelectionBehaviour SelectedItems="{Binding SelectedItems}" />
            </i:Interaction.Behaviors>
        </ListView>
        <ItemsControl ItemsSource="{Binding QueueActions}" Grid.Row="3">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static resources:Strings.Cancel}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Status}" Foreground="{DynamicResource ThemeForegroundBrush}"
                                   Padding="3,0,0,0"
                                   Grid.Column="0" VerticalAlignment="Center" />
                        <Button Command="{Binding CancelCommand}" BorderThickness="0" BorderBrush="Transparent"
                                Background="Transparent" Grid.Column="1"
                                ToolTip="{x:Static resources:Strings.Cancel}">
                            <Image Source="{StaticResource CancelIcon}" Height="16" />
                        </Button>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <StatusBar Grid.Row="4" Background="{DynamicResource ThemeBackgroundBrush}"
                   Foreground="{DynamicResource ThemeForegroundBrush}"
                   BorderBrush="{DynamicResource ThemeWindowBackgroundBrush}">
            <TextBlock Text="{Binding StatusLabel}" />
        </StatusBar>
    </Grid>
</Window>