<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:resources="clr-namespace:ClassicAssist.Shared.Resources;assembly=ClassicAssist.Shared"
    xmlns:viewModels="clr-namespace:ClassicAssist.UI.ViewModels;assembly=ClassicAssist.Shared"
    xmlns:misc="clr-namespace:ClassicAssist.Misc"
    xmlns:misc1="clr-namespace:ClassicAssist.UI.Misc"
    xmlns:data="clr-namespace:ClassicAssist.Data"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:misc11="clr-namespace:ClassicAssist.Data;assembly=ClassicAssist.Shared"
    x:Class="ClassicAssist.UI.Views.OptionsTabControl"
    mc:Ignorable="d"
    d:DesignHeight="300" d:DesignWidth="500">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}" />
        </Style>
    </d:DesignerProperties.DesignStyle>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Resources/ResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.DataContext>
        <viewModels:OptionsTabViewModel />
    </UserControl.DataContext>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0">
            <StackPanel.Resources>
                <misc:BindingProxy x:Key="proxy" Data="{Binding}" />
            </StackPanel.Resources>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                <Label Content="{x:Static resources:Strings.Language}" />
                <ComboBox Margin="10,0,10,0"
                          ItemsSource="{Binding Source={misc1:EnumBindingSource {x:Type misc11:Language}}}"
                          x:Name="langCombo" SelectedItem="{x:Static misc11:AssistantOptions.LanguageOverride}"
                          MinWidth="100">
                    <i:Interaction.Behaviors>
                        <misc1:ComboBoxBehavior CommandBinding="{Binding SetLanguageOverrideCommand}"
                                                CommandParameter="{Binding SelectedItem, ElementName=langCombo}"
                                                OnlyUserTriggered="True" />
                    </i:Interaction.Behaviors>
                </ComboBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                <Label Content="{x:Static resources:Strings.Command_Prefix_}" />
                <ComboBox Text="{Binding CurrentOptions.CommandPrefix}" Margin="10,0,10,0" Padding="10,2,10,2"
                          MinWidth="50">
                    <ComboBoxItem Content="+" />
                    <ComboBoxItem Content="=" />
                </ComboBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                <Label Content="{x:Static resources:Strings.Smart_last_target_}" />
                <ComboBox Text="{Binding CurrentOptions.SmartTargetOption, Mode=TwoWay}" Margin="10,0,10,0"
                          ItemsSource="{Binding Source={misc1:EnumBindingSource {x:Type misc11:SmartTargetOption}}}"
                          MinWidth="100" />
            </StackPanel>
            <CheckBox Content="{x:Static resources:Strings.Persist_Use_Once}"
                      IsChecked="{Binding CurrentOptions.PersistUseOnce, Mode=TwoWay}" />
            <CheckBox Content="{x:Static resources:Strings.Use_death_screen_whilst_hidden}"
                      IsChecked="{Binding CurrentOptions.UseDeathScreenWhilstHidden}" />
            <CheckBox IsChecked="{Binding CurrentOptions.RangeCheckLastTarget}" DataContext="{Binding}">
                <CheckBox.ContentTemplate>
                    <ItemContainerTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{x:Static resources:Strings.Range_check_last_target}" TextWrapping="Wrap" />
                            <TextBox Width="40" Margin="5,0,0,0"
                                     Text="{Binding Path=Data.CurrentOptions.RangeCheckLastTargetAmount, Source={StaticResource proxy}}" />
                        </StackPanel>
                    </ItemContainerTemplate>
                </CheckBox.ContentTemplate>
            </CheckBox>
            <CheckBox Content="{x:Static resources:Strings.Use_experimental_fizzle_detection}"
                      IsChecked="{Binding CurrentOptions.UseExperimentalFizzleDetection}" />
            <CheckBox IsChecked="{Binding CurrentOptions.UseObjectQueue}" DataContext="{Binding}">
                <CheckBox.ContentTemplate>
                    <ItemContainerTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{x:Static resources:Strings.Use_object_queue}" Margin="0" />
                            <TextBox Width="40" Margin="10,0,10,0"
                                     Text="{Binding Path=Data.CurrentOptions.UseObjectQueueAmount, Source={StaticResource proxy}}" />
                            <Label Content="{x:Static resources:Strings.items}" Margin="0"
                                   Padding="0,0,0,0" />
                        </StackPanel>
                    </ItemContainerTemplate>
                </CheckBox.ContentTemplate>
            </CheckBox>
            <CheckBox IsChecked="{Binding CurrentOptions.LimitMouseWheelTrigger}" DataContext="{Binding}">
                <CheckBox.ContentTemplate>
                    <ItemContainerTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{x:Static resources:Strings.Limit_Mouse_Wheel_Retrigger}" Margin="0"
                                       TextWrapping="Wrap" VerticalAlignment="Center" />
                            <TextBox Width="40" Margin="10,0,10,0"
                                     Text="{Binding Path=Data.CurrentOptions.LimitMouseWheelTriggerMS, Source={StaticResource proxy}}"
                                     TextWrapping="Wrap" />
                            <TextBlock Text="ms" TextWrapping="Wrap"
                                       Margin="5,0,0,0" VerticalAlignment="Center" />
                        </StackPanel>
                    </ItemContainerTemplate>
                </CheckBox.ContentTemplate>
            </CheckBox>
            <CheckBox Content="{x:Static resources:Strings.Auto_accept_party_invites}"
                      IsChecked="{Binding CurrentOptions.AutoAcceptPartyInvite}" />
            <CheckBox IsChecked="{Binding CurrentOptions.AutoAcceptPartyOnlyFromFriends}">
                <TextBlock Text="{x:Static resources:Strings.Auto_accept_only_from_friends}" TextWrapping="Wrap" />
            </CheckBox>
            <CheckBox Content="{x:Static resources:Strings.Macros_default_to_quiet_mode}"
                      IsChecked="{Binding CurrentOptions.DefaultMacroQuietMode}" />
            <CheckBox Content="{x:Static resources:Strings.Check_hands_before_potions}"
                      IsChecked="{Binding CurrentOptions.CheckHandsPotions}" />
        </StackPanel>
        <StackPanel x:Name="stackPanel" Grid.Column="1">
            <CheckBox IsChecked="{Binding CurrentOptions.PreventTargetingInnocentsInGuardzone}"
                      ToolTip="{x:Static resources:Strings.Applies_to_hotkeys___macros_only_}">
                <TextBlock Text="{x:Static resources:Strings.Prevent_targeting_innocents_in_guardzone}"
                           TextWrapping="Wrap" />
            </CheckBox>
            <CheckBox IsChecked="{Binding CurrentOptions.PreventAttackingInnocentsInGuardzone}"
                      ToolTip="{x:Static resources:Strings.Applies_to_hotkeys___macros_only_}">
                <TextBlock Text="{x:Static resources:Strings.Prevent_attacking_innocents_in_guardzone}"
                           TextWrapping="Wrap" />
            </CheckBox>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Label Content="{x:Static resources:Strings.Last_target_message_}" Grid.Row="0" Grid.Column="0" />
                <TextBox Text="{Binding CurrentOptions.LastTargetMessage}" Grid.Row="0" Grid.Column="1" />
                <Label Content="{x:Static resources:Strings.Friend_target_message_}" Grid.Row="1" Grid.Column="0" />
                <TextBox Text="{Binding CurrentOptions.FriendTargetMessage}" Grid.Row="1" Grid.Column="1" />
                <Label Content="{x:Static resources:Strings.Enemy_target_message_}" Grid.Row="2" Grid.Column="0" />
                <TextBox Text="{Binding CurrentOptions.EnemyTargetMessage}" Grid.Row="2" Grid.Column="1" />
            </Grid>
            <CheckBox Content="{x:Static resources:Strings.GetFriend_GetEnemy_uses_ignore_list}"
                      IsChecked="{Binding CurrentOptions.GetFriendEnemyUsesIgnoreList}" />
            <CheckBox Content="{x:Static resources:Strings.Abilities_Gump}"
                      IsChecked="{Binding CurrentOptions.AbilitiesGump}" />
            <CheckBox Content="{x:Static resources:Strings.Show_running_macros_gump}"
                      IsChecked="{Binding CurrentOptions.MacrosGump}" />
            <CheckBox Content="{x:Static resources:Strings.Show_Profile_Name_In_Title}"
                      IsChecked="{Binding CurrentOptions.ShowProfileNameWindowTitle}" />
            <CheckBox Content="{x:Static resources:Strings.Queue_Last_Target___Target_Self}"
                      IsChecked="{Binding CurrentOptions.QueueLastTarget}" />
            <DockPanel IsEnabled="{Binding CurrentOptions.QueueLastTarget}">
                <Label Content="{x:Static resources:Strings.Max_Target_Queue_Length_}" DockPanel.Dock="Left" />
                <xctk:IntegerUpDown Minimum="1" Maximum="100" Value="{Binding CurrentOptions.MaxTargetQueueLength}"
                                    Width="50" UpdateValueOnEnterKey="True" DockPanel.Dock="Right" Margin="10,0,0,0" />
            </DockPanel>
            <CheckBox Content="{x:Static resources:Strings.Sort_Macros_Alphabetical}"
                      IsChecked="{Binding CurrentOptions.SortMacrosAlphabetical}" />
            <CheckBox Content="{x:Static resources:Strings.Show_resurrection_waypoints}"
                      IsChecked="{Binding CurrentOptions.ShowResurrectionWaypoints}"
                      ToolTip="{x:Static resources:Strings.Requires_Server_Support}" />
        </StackPanel>
    </Grid>
</UserControl>